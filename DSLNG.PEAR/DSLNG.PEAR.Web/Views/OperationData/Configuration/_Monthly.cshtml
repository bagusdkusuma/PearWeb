@using DSLNG.PEAR.Data.Enums
@model DSLNG.PEAR.Web.ViewModels.OperationData.OperationDataConfigurationViewModel

<script type="text/javascript">
    $(document).ready(function () {
        $('#div-proceed').hide();
        $('#btn-proceed').click(function () {
            var formData = {
                'filename': link,
                'scenarioId': value.scenarioId,
                'configType': value.configType

            };
            $.ajax({
                url: '@Url.Action("ProcessFile", "File")',
                type: 'POST',
                data: formData,
                beforeSend: function () {
                    console.log(formData);
                    $('.ajax-loader2').show();
                    $('.notification').empty();
                    $('.notification').hide();
                }
            }).done(function (result) {
                $('.ajax-loader2').hide();
                var alertType = result.isSuccess === true ? 'alert-success' : 'alert-danger';
                if (result.isSuccess === true || result.message === null) {
                    $('.notification').html('<div class="alert ' + alertType + '" role="alert">' + result.Message + '</div>').fadeOut("slow");
                    $(".nav-tabs .active").find('a').click();
                } else {
                    $('.notification').html('<div class="alert ' + alertType + '" role="alert">' + result.Message + '</div>').fadeOut("slow");
                }

                $('.notification').show();
            });
        });
    });
        var link = null;
        function OnClick(s, e) {
            uc.Upload();
        }
        function OnUploadTextChanged(s, e) {
            uc.Upload();
        }
        function OnFileUploadComplete(s, e) {
            var callback;
            var message;
            if (e.callbackData !== "") {
                link = e.callbackData;
                callback = 'FileUploadComplete: ' + e.callbackData;
                $('.notification').empty();
                message = '<div class="alert alert-success" role="alert">' + callback + '</div>';
                $('.notification').append(message).fadeIn().delay(10000).fadeOut();
                $('#div-proceed').show();

            }
            else {
                $('.notification').empty();
                callback = 'The selected file was not uploaded.';
                message = '<div class="alert alert-danger" role="alert">' + callback + '</div>';
                $('.notification').append(message).fadeIn().delay(1000).fadeOut();
            }
        }

        function proceed(s) {
            alert(s);
        }

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        var value = getUrlVars();
        value.configType = "@ConfigType.OperationData.ToString()";

</script>



<div role="tabpanel" class="tab-pane active" id="monthly">

    <div style="overflow: auto">
        <div class="notification"></div>
       
        <form class="form-inline" style = "float: left;margin:0 10px 10px 0"  action="@Url.Action("DownloadTemplate", "File")" method="POST">
            <div class="form-group" style="padding-right: 30px; border-right: solid 1px #3f454f;">
                <label class="labletop">Year :</label>
                @Html.DropDownListFor(x => x.Year, Model.Years, new { @class = "form-control ddl-year" })
                <input type="hidden" value="@ConfigType.OperationData" name="ConfigType" id="ConfigType"/>
                @Html.HiddenFor(x => x.RoleGroupId)
                @Html.HiddenFor(x => x.PeriodeType)
                @Html.HiddenFor(x => x.Year)
                @Html.HiddenFor(x => x.ScenarioId)
            </div>
            <div class="form-group">
                <input type="submit" value="Download Template" class="btn btn-primary" />
            </div>
            <div class="form-group" id="div-proceed">
                <input id="btn-proceed" class="btn btn-primary" value="Proceed" />
            </div>
        </form>
        @using (Html.BeginForm("ProcessFile", "File", new { configType = Model.ConfigType, scenarioId = Model.ScenarioId }, FormMethod.Post, new { @class = "form-inline" }))
        {

            @Html.DevExpress().UploadControl(settings =>
                {
                    settings.Name = "uc";
                    settings.CallbackRouteValues = new { configType = Model.ConfigType, scenarioId = Model.ScenarioId, Controller = "File", Action = "UploadControlCallbackAction" };
                    settings.ClientSideEvents.FileUploadComplete = "OnFileUploadComplete";
                    settings.ClientSideEvents.TextChanged = "function(s,e){uc.Upload();}";
                    settings.ShowProgressPanel = true;
                    settings.ValidationSettings.Assign(DSLNG.PEAR.Web.Extensions.ExcelUploadHelper.ValidationSettings);
                }).GetHtml()
        }
        <table class="table table-hover table-transparent table-bordered">
            <tbody>
                <tr>
                    <th style="width: 30%;">KPI Name</th>
                    <th style="width: 50px;">Jan</th>
                    <th style="width: 50px;">Feb</th>
                    <th style="width: 50px;">Mar</th>
                    <th style="width: 50px;">Apr</th>
                    <th style="width: 50px;">May</th>
                    <th style="width: 50px;">Jun</th>
                    <th style="width: 50px;">Jul</th>
                    <th style="width: 50px;">Aug</th>
                    <th style="width: 50px;">Sep</th>
                    <th style="width: 50px;">Oct</th>
                    <th style="width: 50px;">Nov</th>
                    <th style="width: 50px;">Dec</th>
                </tr>
                @{ var a = 0;}
                @foreach (var kpi in Model.Kpis)
                {
                    <tr>
                        <td style="text-align: left">@kpi.Name (@kpi.MeasurementName)</td>
                        @{ var b = 0;}
                        @foreach (var operationData in kpi.OperationData)
                        {
                            var remarkSign = "";
                            if (!string.IsNullOrEmpty(operationData.Remark))
                            {
                                remarkSign = "remark_sign";
                            }
                            var idValue = "Kpis_" + a + "__OperationDatas_" + b + "__Value";
                            <th>
                                <input type="text" data-toggle="popover" class="form-control-small value kpi-popover @remarkSign" id="@idValue" value="@operationData.Value" readonly="readonly">
                                <input type="hidden" name="KpiId" class="kpiId" value="@kpi.Id" />
                                <input type="hidden" name="HeaderPopover" class="header-popover" value="" />
                                <input type="hidden" name="Id" class="form-control-small id" value="@operationData.Id">
                                <input type="hidden" name="ScenarioId" class="form-control-small scenario-id" value="@Model.ScenarioId">
                                <input type="hidden" name="KeyOperationConfigId" class="form-control-small key-operation-config-id" value="@operationData.KeyOperationConfigId">
                                <input type="hidden" name="PeriodeType" class="periodeType" value="@DSLNG.PEAR.Data.Enums.PeriodeType.Monthly" />
                                <input type="hidden" name="Remark" class="form-control-small remark" value="@operationData.Remark">
                                <input type="hidden" name="Periode" class="form-control-small periode" value="@operationData.Periode">
                            </th>
                            b++;
                        }

                    </tr>
                        a++;
                }
            </tbody>
        </table>
    </div>


</div>
