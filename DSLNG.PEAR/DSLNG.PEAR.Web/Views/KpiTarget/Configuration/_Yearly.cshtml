@using DSLNG.PEAR.Data.Enums
@model DSLNG.PEAR.Web.ViewModels.KpiTarget.ConfigurationKpiTargetsViewModel
<script type="text/javascript">
    $(document).ready(function () {
        $("#fixed-table").tableHeadFixer({ "left": 1 });
        $('#div-proceed').hide();
        $('#btn-proceed').click(function () {
            var formData = {
                'filename': encodeURIComponent(link),
                'configType': '@ConfigType.KpiTarget.ToString()'
            };

            $.ajax({
                url: '@Url.Action("ProcessFile", "File")',
                type: 'POST',
                data: formData,
                beforeSend: function () {
                    $('.ajax-loader2').show();
                    $('.notification').empty();
                    $('.notification').hide();
                }
            }).done(function (result) {
                $('.ajax-loader2').hide();
                var alertType = result.isSuccess === true ? 'alert-success' : 'alert-danger';
                if (result.isSuccess === true || result.message === null) {
                    $('.notification').html('<div class="alert ' + alertType + '" role="alert">' + result.Message + '</div>').fadeOut("slow");
                    if (window.location.href.indexOf("yearly") > -1) {
                        location.reload();
                    } else {
                        $(".nav-tabs .active").find('a').click();
                    }
                } else {
                    $('.notification').html('<div class="alert ' + alertType + '" role="alert">' + result.Message + '</div>').fadeOut("slow");
                }

                $('.notification').show();
            });
        });
    });
    var link = null;
    function OnClick(s, e) {
        uc.Upload();
    }
    function OnUploadTextChanged(s, e) {
        uc.Upload();
    }
    function OnFileUploadComplete(s, e) {
        var callback;
        var message;
        if (e.callbackData !== "") {
            link = e.callbackData;
            callback = 'FileUploadComplete: ' + e.callbackData;
            $('.notification').empty();
            message = '<div class="alert alert-success" role="alert">' + callback + '</div>';
            $('.notification').append(message).fadeIn().delay(10000).fadeOut();
            $('#div-proceed').show();
        }
        else {
            $('.notification').empty();
            callback = 'The selected file was not uploaded.';
            message = '<div class="alert alert-danger" role="alert">' + callback + '</div>';
            $('.notification').append(message).fadeIn().delay(10000).fadeOut();
        }
    }

    function proceed(s) {
        alert(s);
    }

</script>
<div class="notification"></div>

@using (Html.BeginForm("DownloadTemplate", "File", FormMethod.Post, new { @class = "form-inline", @style = "float: left;margin:0 10px 10px 0" }))
{
    <input type="hidden" value="@ConfigType.KpiTarget" name="ConfigType" id="ConfigType"/>
    @Html.HiddenFor(x => x.RoleGroupId)
    @Html.HiddenFor(x => x.PeriodeType)
    @Html.HiddenFor(x => x.Year)
    @Html.HiddenFor(x => x.Month)
    <input type="submit" value="Download Template" class="btn btn-primary" />
}

<form class="form-inline" style="float: left">
    <div class="form-group" id="div-proceed">
        <input id="btn-proceed" class="btn btn-primary" value="Proceed" />
    </div>
</form>

@using (Html.BeginForm("Upload", "File", new { configType = "KpiTarget" }, FormMethod.Post, new { @class = "form-inline" }))
{

    @Html.DevExpress().UploadControl(settings =>
        {
            settings.Name = "uc";
            settings.CallbackRouteValues = new { configType = "KpiTarget", Controller = "File", Action = "UploadControlCallbackAction" };
            settings.ClientSideEvents.FileUploadComplete = "OnFileUploadComplete";
            settings.ClientSideEvents.TextChanged = "function(s,e){uc.Upload();}";
            settings.ShowProgressPanel = true;
            settings.ValidationSettings.Assign(DSLNG.PEAR.Web.Extensions.ExcelUploadHelper.ValidationSettings);
        }).GetHtml()
}
<div style="clear: both"></div>
<div id="parent-fixed-table">
    <table id="fixed-table" class="table table-hover table-transparent table-bordered">
        <thead>
            <tr style="background-color: #6aa89d">
                <th style="width: 50px;">KPI Name</th>
                <th style="width: 50px;">2015</th>
                <th style="width: 50px;">2016</th>
                <th style="width: 50px;">2017</th>
                <th style="width: 50px;">2018</th>
                <th style="width: 50px;">2019</th>
                <th style="width: 50px;">2020</th>
                <th style="width: 50px;">2021</th>
                <th style="width: 50px;">2022</th>
                <th style="width: 50px;">2023</th>
                <th style="width: 50px;">2024</th>
                <th style="width: 50px;">2025</th>
                <th style="width: 50px;">2026</th>
                <th style="width: 50px;">2027</th>
                <th style="width: 50px;">2028</th>
                <th style="width: 50px;">2029</th>
                <th style="width: 50px;">2030</th>
            </tr>
        </thead>
        <tbody>

            @{
                var a = 0;
                int number = 1;
            }
            @foreach (var kpi in Model.Kpis)
            {
                <tr>
                    <td style="text-align: left; background: #6aa89d">@string.Format("{0}.", number++) @kpi.Name (@kpi.Measurement)</td>
                    @{ var b = 0;}
                    @foreach (var kpiTarget in kpi.KpiTargets)
                    {
                        var remarkSign = "";
                        if (!string.IsNullOrEmpty(kpiTarget.Remark))
                        {
                            remarkSign = "remark_sign";
                        }
                        var idValue = "Kpis_" + a + "__KpiTargets_" + b + "__Value";
                        <th>
                            <input type="hidden" name="KpiId" class="kpiId" value="@kpi.Id" />
                            <input type="hidden" name="HeaderPopover" class="header-popover" value="" />
                            <input type="hidden" name="PeriodeType" class="periodeType" value="@DSLNG.PEAR.Data.Enums.PeriodeType.Yearly" />
                            <input type="text" data-toggle="popover" class="form-control-small value kpi-popover @remarkSign" id="@idValue" value="@kpiTarget.Value" readonly="readonly">
                            <input type="hidden" class="form-control-small id" value="@kpiTarget.Id">
                            <input type="hidden" class="form-control-small remark" value="@kpiTarget.Remark">
                            <input type="hidden" class="form-control-small periode" value="@kpiTarget.Periode">
                        </th>
                        b++;
                    }
                </tr>
                    a++;
            }
        </tbody>
    </table>
</div>
