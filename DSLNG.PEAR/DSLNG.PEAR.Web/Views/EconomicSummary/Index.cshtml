@model DSLNG.PEAR.Web.ViewModels.EconomicSummary.EconomicSummaryReportViewModel
@{
    ViewBag.Title = "Economic Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<string> groupsAdded = new List<string>();
    int no = 1;
}

@*@{
    double x = 19853525.6121;
    var y = String.Format("{0:#,##0.###}", x);
}

<h1>@y</h1>*@

<div class="page-header">
    <h3>Economic Summary</h3>
</div>
<div class="add-button-wrapper">
    <form action="@Url.Action("UpdateResult")" method="POST">
        <button type="submit" class="btn btn-primary">Update Result</button>
    </form>
</div>
@{
    foreach (var @group in Model.Groups)
    {
        var uniqueGroupName = group.Id + "_" + group.Name;
        if (!groupsAdded.Contains(uniqueGroupName))
        {
    <h4>@group.Name</h4>
    <table class="table table-hover table-transparent table-bordered">
        <tr>
            <th rowspan="2">No</th>
            <th rowspan="2">Key Ouput</th>
            <th rowspan="2">Measurement</th>
            @foreach (var scenario in Model.Scenarios)
            {
                <th colspan="2">@scenario.Name</th>
            }
        </tr>
        <tr>
            @foreach (var scenario in Model.Scenarios)
            {
                <th>Current Overview</th>
                <th>Model-Forecasted</th>
            }

        </tr>
        @foreach (var keyoutput in @group.KeyOutputs)
        {
            <tr>
                <td>@no</td>
                <td class="text-align-left">@keyoutput.Name</td>
                <td>@keyoutput.Measurement</td>

                @foreach (var scenario in Model.Scenarios)
                {
                    <td class="text-align-right">@GetValue(scenario.Id, keyoutput.Name, @group.Id, 0)</td>
                    <td class="text-align-right">@GetValue(scenario.Id, keyoutput.Name, @group.Id, 1)</td>
                }
            </tr>
                no++;
        }
    </table>
    <hr />
        }

        groupsAdded.Add(uniqueGroupName);
    }
}


@helper GetValue(int scenarioId, string keyOutputName, int groupId, int type)
{
        var groups = Model.Groups.Where(x => x.Id == groupId).ToList();
    foreach (var g in groups)
    {
        
        var outputResult = g.KeyOutputs.FirstOrDefault(x => x.Scenario.Id == scenarioId && x.Name == keyOutputName);
        if (outputResult != null && outputResult.OutputResult != null)
        {
            if (type == 0)
            {
                @Html.ParseToDateOrNumber(outputResult.OutputResult.Actual)
            }
            else if (type == 1)
            {
                @Html.ParseToDateOrNumber(outputResult.OutputResult.Forecast)
            }
        }
    }
}
