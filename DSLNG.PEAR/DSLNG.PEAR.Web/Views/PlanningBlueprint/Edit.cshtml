@model DSLNG.PEAR.Web.ViewModels.PlanningBlueprint.PlanningBlueprintViewModel

@{
    ViewBag.Title = "Edit";
}
<div class="planning-blueprint-save">
    @using (Html.BeginForm("Edit", "PlanningBlueprint"))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Id);
        @Html.HiddenFor(x => x.IsReviewer);
        <div class="col-md-12">
            <div class="title">Planning Blueprint</div>
            <div>@Html.ValidationSummary(true)</div>
        </div>
        <div class="col-md-12">
            <div class="form-inline whitebox">
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Title)
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Title)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Description)
                    @Html.TextAreaFor(model => model.Description, 5, 100, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

                <div class="form-group form-list">
                    <label>Economic Indicators</label>
                    <input type="button" data-toggle="modal" id="test" data-target="#economic-indicator-modal" class="btn btn-default" value="Choose Economic Indicators" />

                </div>
                <ul class="economic-indicators-holder" style="padding-left: 200px;color:#fff">
                    @foreach (var keyOutput in Model.KeyOutputs)
                    {
                        <li data-id="@keyOutput.Id">@Html.Hidden("KeyOutputIds[]", keyOutput.Id)@keyOutput.Name</li>
                    }
                </ul>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.IsActive)
                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
                @if (Model.IsReviewer)
                {
                    <div class="form-group form-list">
                        <label>Reset Workflow</label>
                        <a style="color: white;" href="/PlanningBlueprint/ResetWorkflow" class="btn-master-rgw btn btn-default reset-workflow">Reset</a>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-12 artifact-designer-btns">
            <button type="submit" class="btn-master-rgw btn btn-primary btn-lg submit-pb"><span class="fa fa-floppy-o"></span> Save</button>
            <a onclick="location.reload();" class="btn-master-rgw btn-clear-rgw btn btn-primary btn-lg"><span class="fa fa-eraser"></span>Clear</a>
            <a href="/PlanningBlueprint" class="btn-master-rgw btn-cancel-rgw btn btn-primary btn-lg"><span class="fa fa-times"></span>Cancel</a>
        </div>
    }
</div>
<div class="modal fade" id="economic-indicator-modal" data-id="id">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close btn-finish-relation" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Economic Indicator</h3>
            </div>

            <div class="modal-body modal-loading">
                <div class="economic-indicators"></div>
                <img src="@Url.Content("~/Content/img/ajax-loader2.gif")" class="ajax-loading-dialog" style="position: absolute"></img>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-master-rgw btn btn-primary" data-dismiss="modal" aria-label="Close">OK</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $(document).on('click', '.reset-workflow', function (e) {
            e.preventDefault();
            var $this = $(this);
            var $form = $('<form />');
            $form.attr('action', $this.attr('href'));
            $form.attr('method', 'POST');
            $form.css('display', 'none');
            if (confirm("Are you sure want to reset the workflow of this planning blueprint?")) {
                console.log('siniah');
                var $id = $('<input />');
                $id.attr('type', 'hidden');
                $id.attr('name', 'Id');
                $id.val(@Model.Id);
                $form.prepend($id);
                $('body').append($form);
                $form.submit();
            }
        });
        var $economicHolder = $('.economic-indicators-holder');
        $('#economic-indicator-modal').on('show.bs.modal', function () {
            var $this = $(this);
            if (!$this.find('.indicator-group').length) {
                $.get('/planningblueprint/geteconomicindicators', function (data) {
                    $this.find('.modal-loading').addClass('loaded');
                    $this.find('.economic-indicators').html(data);
                    var keyOutputIds = [];
                    $('.economic-indicators-holder').children('li').each(function (i, val) {
                        keyOutputIds.push(parseInt($(val).data('id')));
                    });
                    $this.find('input[name="checkthis"]').each(function (i, val) {
                        if (keyOutputIds.indexOf(parseInt($(val).val())) > -1) {
                            $(val).prop('checked', true);
                        }
                    });
                });
            }
        });
        $('#economic-indicator-modal').on('hidden.bs.modal', function () {
            var $this = $(this);
            //$this.find('.modal-loading').removeClass('loaded');
            $economicHolder.html('');
            $this.find('input[name="checkthis"]:checked').each(function (i, val) {
                var $liClone = $(val).closest('li').clone();
                $liClone.find('input[type="checkbox"]').prop('type', 'hidden').prop('name', 'KeyOutputIds[]');
                $economicHolder.append($liClone);
            });
        });
        $(document).on('click', '.submit-pb', function (e) {
            e.preventDefault();
            var $this = $(this);
            var $form = $this.closest('form');
            if (!$form.valid()) return;
            if (!$form.find('input[name="KeyOutputIds[]"]').length) {
                if (confirm("You have not selected any economic indicators, Are you sure want to continue?")) {
                    $form.submit();
                }
            } else {
                $form.submit();
            }
        });
    });
</script>