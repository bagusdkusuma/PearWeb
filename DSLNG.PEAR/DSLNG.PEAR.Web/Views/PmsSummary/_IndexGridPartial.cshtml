@using DSLNG.PEAR.Common.Contants
@using DSLNG.PEAR.Web.Helpers
@model DSLNG.PEAR.Web.ViewModels.PmsSummary.PmsSummaryIndexViewModel

<div class="panel panel-default">
    <table class="table table-transparent table-pms-summary table-bordered" cellspacing="0">
        <tbody>
            <tr>
                <td rowspan="2" style="border-bottom: 1px solid #ffffff;">&nbsp;</td>
                <td rowspan="2" style="border-bottom: 1px solid #ffffff;">Performance Indicator</td>
                <td style="border-right: 1px solid #ffffff; border-left: 1px solid #ffffff" colspan="2">Actual / Target</td>
                @*<td rowspan="2" style="border-bottom: 1px solid #ffffff;">Score / Weight</td>*@
                <td style="border-bottom: 1px solid #ffffff;">Score / Weight</td>
            </tr>
            <tr>
                <td style="border-bottom: 1px solid #ffffff; border-right: 1px solid #ffffff; border-left: 1px solid #ffffff">Month To Date</td>
                @*<td style="border-bottom: 1px solid #ffffff; border-right: 1px solid #ffffff; border-left: 1px solid #ffffff" hidden="hidden">Annually</td>*@
                <td style="border-bottom: 1px solid #ffffff; border-right: 1px solid #ffffff; border-left: 1px solid #ffffff">Year To Date</td>
                @*<td style="border-bottom: 1px solid #ffffff; border-right: 1px solid #ffffff; border-left: 1px solid #ffffff" hidden="hidden">Annually</td>*@
                <td style="border-bottom: 1px solid #ffffff; border-right: 1px solid #ffffff; border-left: 1px solid #ffffff">Year To Date</td>
            </tr>
            @{
                List<string> existedPillars = new List<string>();
                int pillarLength = 0;
                int counterKpi = 0;
                decimal pillarScore = 0;
                decimal ytdPillarScore = 0;
                int count = 1;
                double totalPillarWeight = 0;
                decimal totalPillarScore = 0;
                decimal totalPillarYtdScore = 0;

                foreach (var item in Model.PmsSummaries)
                {
                    var scoreIndicatorPmsConfigUrl = Url.Action("ScoreIndicator", "PmsConfig", new { id = item.PmsConfigId });
                    var scoreIndicatorPmsConfigDetailsUrl = Url.Action("ScoreIndicator", "PmsConfigDetails", new { id = item.PmsConfigDetailId });
                    var scoreIndicatorPmsSummaryUrl = Url.Action("ScoreIndicator", "PmsSummary", new { id = item.PmsSummaryId });
                    if (!existedPillars.Exists(x => x == item.Pillar))
                    {
                        totalPillarWeight += item.PillarWeight;
                        counterKpi = 1;
                        pillarScore = 0;
                        ytdPillarScore = 0;
                        pillarLength = Model.PmsSummaries.Count(x => x.Pillar == item.Pillar);
                        existedPillars.Add(item.Pillar);
                        if (!string.IsNullOrEmpty(item.PillarIcon))
                        {
                <tr class="tr-pillar" style="background-color: @item.PmsConfigColor">
                    <td>&nbsp;</td>
                    <td colspan="4" class="text-left">
                        <div class="roundlight popover-pillar" data-toggle="popover" style="background-color: @item.PillarColor" data-poload="@scoreIndicatorPmsConfigUrl"></div>@item.Pillar (@item.PillarWeight)
                                    <img src="@Url.Content(PathConstant.PillarPath)/@item.PillarIcon" onerror="this.onerror = null; this.src = '@Url.Content(PathConstant.PillarPath)/default.png'" />
                    </td>
                </tr>
                        
                        }
                        else
                        {
                <tr class="tr-pillar" style="background-color: @item.PmsConfigColor">
                    <td>&nbsp;</td>
                    <td colspan="4" class="text-left">
                        <div class="roundlight popover-pillar" data-toggle="popover" style="background-color: @item.PillarColor" data-poload="@scoreIndicatorPmsConfigUrl"></div>@item.Pillar (@item.PillarWeight)
                    </td>
                </tr>
                        }

                    }
                    pillarScore += Convert.ToDecimal(item.Score);
                    ytdPillarScore += Convert.ToDecimal(item.YtdScore);
                <tr class="kpi-row" onclick="OnCellClick('5', @item.PmsConfigDetailId, '@item.KpiColor');">
                    <td>&nbsp;</td>
                    @if (!string.IsNullOrEmpty(item.KpiIcon))
                    {
                        <td class="text-left" style="padding-left: 21px;">
                            <div class="roundlight popover-pillar" data-toggle="popover" style="background-color: @item.KpiColor" data-poload="@scoreIndicatorPmsConfigDetailsUrl"></div>@item.KpiName
                            <img src="@Url.Content(PathConstant.KpiPath)/@item.KpiIcon" onerror="this.onerror = null; this.src = '@Url.Content(PathConstant.KpiPath)/default.png'" />
                        </td>
                    }
                    else
                    {
                        
                        <td class="text-left" style="padding-left: 21px;">
                            <div class="roundlight popover-pillar" data-toggle="popover" style="background-color: @item.KpiColor" data-poload="@scoreIndicatorPmsConfigDetailsUrl"></div>@item.KpiName
                        </td>
                    }

                    <td class="text-right">@NumberHelper.DoubleToDecimalFormat(item.ActualMonthly) / @NumberHelper.DoubleToDecimalFormat(item.TargetMonthly)</td>
                    <td class="text-right" hidden="hidden">@NumberHelper.DoubleToDecimalFormat(item.ActualYearly) / @NumberHelper.DoubleToDecimalFormat(item.TargetYearly)</td>
                    <td class="text-right">@NumberHelper.DoubleToDecimalFormat(item.ActualYtd) / @NumberHelper.DoubleToDecimalFormat(item.TargetYearly)</td>
                    <td class="text-right" hidden="hidden">@NumberHelper.DoubleToDecimalFormat(item.Score) / @item.Weight</td>
                    <td class="text-right">@NumberHelper.DoubleToDecimalFormat(item.YtdScore) / @item.Weight</td>
                </tr>

                    if (counterKpi < pillarLength)
                    {
                        counterKpi++;
                    }
                    else if (counterKpi == pillarLength)
                    {
                        decimal pScore = pillarScore / 100 * Convert.ToDecimal(item.PillarWeight);
                        totalPillarScore += pScore;

                        decimal pYtdScore = ytdPillarScore / 100 * Convert.ToDecimal(item.PillarWeight);
                        totalPillarYtdScore += ytdPillarScore;

                <tr class="pillar-score" style="font-weight: bold">
                    <td>&nbsp;</td>
                    <td colspan="3" class="text-left">
                        <span class="pillar-score-text">Score KPI In This Pillar (@ytdPillarScore.ToString(FormatNumber.DecimalFormat))</span>
                    </td>

                    <td class="text-right" hidden="hidden">@( (pScore).ToString(FormatNumber.DecimalFormat)) / @item.PillarWeight</td>
                    <td class="text-right">@( (ytdPillarScore).ToString(FormatNumber.DecimalFormat)) / @item.PillarWeight</td>
                </tr>
                    }
                    if (count == Model.PmsSummaries.Count())
                    {
                <tr style="font-weight: bold">
                    <td>&nbsp;</td>
                    <td colspan="3" class="text-left">
                        <div id="totalScore" class="roundlight" data-total-score-color="@item.TotalScoreColor" style="background-color:@item.TotalScoreColor" data-poload="@scoreIndicatorPmsSummaryUrl"></div>
                        Total Score
                    </td>
                    <td class="text-right">@totalPillarYtdScore.ToString(FormatNumber.DecimalFormat) / @totalPillarWeight</td>
                </tr>
                    }
                    count++;

                }
            }
        </tbody>
    </table>
</div>
