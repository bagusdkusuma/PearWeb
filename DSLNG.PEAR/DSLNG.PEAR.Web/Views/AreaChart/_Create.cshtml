@model DSLNG.PEAR.Web.ViewModels.Artifact.ArtifactDesignerViewModel

<div class="form-group form-list">
    @Html.LabelFor(model => model.AreaChart.Series)
    @Html.DropDownListFor(m => m.AreaChart.SeriesType, Model.AreaChart.SeriesTypes, "Select Series Type", new { id = "seriesType", @class = "form-control series-type" })
    <input type="button" value="Add Series" class="btn btn-lightblue" id="add-series" />
</div>

<div id="hidden-fields">
    @for (var i = 0; i < Model.AreaChart.Series.Count; i++)
    { 
        <div class="series-template original whitebox">
            <h2>Series</h2>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.AreaChart.Series[i].Label)
                        @Html.TextBoxFor(model => model.AreaChart.Series[i].Label, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AreaChart.Series[i].Label)
                    </div>
                </div>
                <div class="series-details-holder">
                    <div class="col-sm-6">
                        <div class="form-group form-list">
                            @Html.LabelFor(model => model.AreaChart.Series[i].Color)
                            <div class="input-group colorpicker">
                                @Html.TextBoxFor(model => model.AreaChart.Series[i].Color, new { @class = "form-control" })
                                <span class="input-group-addon"><i></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.AreaChart.Series[i].Color)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-list">
                            @Html.LabelFor(model => model.AreaChart.Series[i].KpiId)
                            @Html.DropDownListFor(model => model.AreaChart.Series[i].KpiId, new List<SelectListItem>(), new { @class = "kpi-list form-control", style = "width:180px" })
                            @Html.ValidationMessageFor(model => model.AreaChart.Series[i].KpiId)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group value-axis form-list">
                            @Html.LabelFor(model => Model.AreaChart.Series[i].ValueAxis)
                            @Html.DropDownListFor(model => model.AreaChart.Series[i].ValueAxis, Model.AreaChart.ValueAxes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AreaChart.Series[i].ValueAxis)
                        </div>
                    </div>
                </div>
            </div>
            <div class="stacks-holder">
                <label>&nbsp;</label>
                <input type="button" value="Add Stack" class="btn btn-lightblue add-stack" />
            </div>
            <input type="button" value="Remove" class="remove" />
        </div>
        for (var j = 0; j < Model.AreaChart.Series[i].Stacks.Count; j++)
        { 
        <fieldset class="stack-template original form-inline">
            <legend>Stack</legend>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.AreaChart.Series[i].Stacks[j].Label)
                        @Html.TextBoxFor(model => model.AreaChart.Series[i].Stacks[j].Label, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AreaChart.Series[i].Stacks[j].Label)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AreaChart.Series[i].Stacks[j].KpiId)
                        @Html.DropDownListFor(model => model.AreaChart.Series[i].Stacks[j].KpiId, new List<SelectListItem>(), new { @class = "kpi-list  form-control", style = "width:180px" })
                        @Html.ValidationMessageFor(model => model.AreaChart.Series[i].Stacks[j].KpiId)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AreaChart.Series[i].Stacks[j].Color)
                        <div class="input-group colorpicker">
                            @Html.TextBoxFor(model => model.AreaChart.Series[i].Stacks[j].Color, new { @class = "form-control" })
                            <span class="input-group-addon"><i></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.AreaChart.Series[i].Stacks[j].Color)
                    </div>
                </div>
            </div>
            <input type="button" value="Remove" class="remove" />
        </fieldset>
        }
    }

</div>



