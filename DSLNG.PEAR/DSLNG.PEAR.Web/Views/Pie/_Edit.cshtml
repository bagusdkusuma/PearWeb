@model DSLNG.PEAR.Web.ViewModels.Artifact.ArtifactDesignerViewModel
<div class="form-group form-list">
    @Html.LabelFor(model => model.Is3D)
    @Html.CheckBoxFor(model => model.Is3D, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Is3D)
</div>

<div class="form-group form-list">
    @Html.LabelFor(model => model.ShowLegend)
    @Html.CheckBoxFor(model => model.ShowLegend, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.ShowLegend)
</div>

<div class="form-group form-list">
    <label>Series</label>
    <input type="button" value="Add Series" class="btn btn-lightblue" id="add-series" />
</div>


<div id="hidden-fields">
    @for (var i = 0; i < Model.Pie.Series.Count; i++)
    {
        var original = i == 0 ? "original" : "";
        var dataSeriesPos = original == "" ? "data-series-pos=" + i : "";
        <div class="series-template @original whitebox" @dataSeriesPos>
            <input type="hidden" name="Pie.Series.Index" value="@i" />
            <h2>Series</h2>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.Pie.Series[i].Label)
                        @Html.TextBoxFor(model => model.Pie.Series[i].Label, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Pie.Series[i].Label)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.Pie.Series[i].Color)
                        <div class="input-group colorpicker">
                            @Html.TextBoxFor(model => model.Pie.Series[i].Color, new { @class = "form-control" })
                            <span class="input-group-addon"><i style="background-color:@Model.Pie.Series[i].Color"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Pie.Series[i].Color)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.Pie.Series[i].KpiId)
                        @Html.DropDownListFor(model => model.Pie.Series[i].KpiId, new List<SelectListItem> { new SelectListItem { Value = Model.Pie.Series[i].KpiId.ToString(), Text = Model.Pie.Series[i].KpiName } }, new { @class = "kpi-list form-control", style = "width:180px" })
                        @Html.ValidationMessageFor(model => model.Pie.Series[i].KpiId)
                    </div>
                </div>
                @*<div class="col-sm-6">
                    @{
                            if (i != 0)
                            {
                                Model.LineChart.ValueAxes.Where(x => x.Value == Model.LineChart.Series[i].ValueAxis).First().Selected = true;
                            }
                        <div class="form-group value-axis form-list">
                            @Html.LabelFor(model => Model.LineChart.Series[i].ValueAxis)
                            @Html.DropDownListFor(model => model.LineChart.Series[i].ValueAxis, Model.LineChart.ValueAxes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LineChart.Series[i].ValueAxis)
                        </div>
                    }
                </div>*@
            </div>
            <input type="button" value="Remove" class="remove" />
        </div>
    }

</div>




