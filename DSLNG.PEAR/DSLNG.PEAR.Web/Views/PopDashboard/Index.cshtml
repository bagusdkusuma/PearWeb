@model IEnumerable<DSLNG.PEAR.Web.ViewModels.PopDashboard.PopDashboardViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Project List</h2>
@Html.Partial("_MessageResponse")
<div class="add-button-wrapper">
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</div>


<table id="popDashboard-table" class="rgw-pop-tbl table-transparent table row-border table-bordered table-responsive" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th rowspan="2">Project No</th>
            <th rowspan="2">Project Title</th>
            <th rowspan="2">Project Owner</th>
            <th colspan="2">Budget</th>
            <th colspan="2">Project</th>
            <th rowspan="2">Affected KPI</th>
            <th rowspan="2">Status</th>
            <th rowspan="2">Attachments</th>
            <th rowspan="2" style="width: 200px;">Action</th>
        </tr>
        <tr>
            <th>OPEX (USD)</th>
            <th>CAPEX (USD)</th>
            <th style="width:65px">Start</th>
            <th style="width:65px">End</th>
        </tr>
    </thead>
</table>

@section Scripts{
    <script type="text/javascript">
        var contentUrl = '@Url.Content("$x$")';
        $(document).ready(function () {
            $('#popDashboard-table').DataTable({
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "iDisplayLength": -1,
                "bProcessing": true,
                "bServerSide": true,
                "sServerMethod": "POST",
                "sAjaxSource": '@Url.Action("Grid", "PopDashboard")',
                "order": [[0, "asc"]],
                "aoColumns": [
                    { "mDataProp": "Number", "name": "Number", "className": "dt-body-left" },
                    { "mDataProp": "Title", "name": "Title", "className": "dt-body-left" },
                    { "mDataProp": "StructureOwner", "name": "StructureOwner", "className": "dt-body-left" },
                    {
                        "mDataProp": "BudgetOpex", "name": "BudgetOpex", "className": "dt-body-right", "mRender": function (data, type, row) {
                            return '$'+data.format(0)
                        }
                    },
                    {
                        "mDataProp": "BudgetCapex", "name": "BudgetCapex", "className": "dt-body-right", "mRender": function (data, type, row) {
                            return '$' + data.format(0)
                        }
                    },
                    {
                        "mDataProp": "ProjectStart", "name": "ProjectStart", "className": "dt-body-left", "mRender": function (data, type, row) {
                            return moment(new Date(data.match(/\d+/)[0] * 1)).format('DD-MMM-YY')
                            //return data;
                        }
                    },
                    {
                        "mDataProp": "ProjectEnd", "name": "ProjectEnd", "className": "dt-body-left", "mRender": function (data, type, row) {
                            return moment(new Date(data.match(/\d+/)[0] * 1)).format('DD-MMM-YY')
                            //return data;
                        }
                    },
                    { "mDataProp": "AffectedKPI", "name": "AffectedKPI", "className": "dt-body-left" },
                    { "mDataProp": "Status", "name": "Status", "className": "dt-body-left" },
                    { "mDataProp": "Attachments", "name": "Attachments", "className": "dt-body-left","mRender": function (data, type, row) {
                        var list = '<ul class="pop-attachments-list">';
                        for (var i in data) {
                            list += '<li><a href="' + contentUrl.replace('$x$', data[i].Filename.substr(2, data[i].Filename.length)) + '" class="document-link doc-type-' + data[i].Type +
                                '" >' + data[i].Alias + '</a></li>';
                        }
                        list += '</ul>';
                        return list;
                    }
        },
                    {
                        "orderable": false,
                        "data": null,
                        "defaultContent": '',
                        "mRender": function (data, type, row) {
                            var deleteLink = '<a class="delete" data-id="_id_" href="javascript:;">Delete</a>'.replace('_id_', data.Id);
                            var editLink = '@Html.ActionLink("Edit", "Edit", "PopDashboard", new { id = "_id_" }, null)'.replace('_id_', data.Id);
                            return editLink + ' | ' + deleteLink;
                        }
                    }
                ],
                rowCallback: function (row, data) {
                    // Set the checked state of the checkbox in the table
                    //$('input.is-active', row).prop('checked', data.IsActive == 1);
                }
            });

            $('#popDashboard-table').on('click', '.delete', function () {
                var id = $(this).attr('data-id');
                if (confirm('Are you sure want to delete this item?' + id)) {
                    var url = '@Url.Action("Delete", "PopDashboard")';
                    var form = $('<form />');
                    form.attr('action', url);
                    form.attr('method', 'POST');
                    form.html('<input type="hidden" name="id" value="' + id + '" />');
                    $('body').append(form);
                    form.submit();
                }
            });


        });
    </script>
}