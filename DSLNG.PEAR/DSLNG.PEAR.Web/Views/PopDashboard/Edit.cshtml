@model DSLNG.PEAR.Web.ViewModels.PopDashboard.SavePopDashboardViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="pop-dashboard-save">
    @using (Html.BeginForm("Edit", "PopDashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Id);
        <div class="col-md-12">
            <div class="title">Pop Dashboard</div>
            <div>@Html.ValidationSummary(true)</div>
        </div>
        <div class="col-md-12">
            <div class="form-inline whitebox">
                 <div class="form-group form-list">
                    @Html.LabelFor(model => model.Number)
                    @Html.TextBoxFor(model => model.Number, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Number)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Title)
                    @Html.TextAreaFor(model => model.Title, new { @class = "form-control allow-html" })
                    @Html.ValidationMessageFor(model => model.Title)
                </div>
               <div class="form-group form-list">
                    @Html.LabelFor(model => model.DashboardObjective)
                    @Html.TextAreaFor(model => model.DashboardObjective, new { @class = "form-control allow-html" })
                    @Html.ValidationMessageFor(model => model.DashboardObjective)
                </div>
                 <div class="form-group form-list">
                    @Html.LabelFor(model => model.StructureOwner)
                    @Html.TextBoxFor(model => model.StructureOwner, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StructureOwner)
                </div>
                 <div class="form-group form-list">
                    @Html.LabelFor(model => model.BudgetOpex)
                    @Html.TextBoxFor(model => model.BudgetOpex, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BudgetOpex)
                </div>
                 <div class="form-group form-list">
                    @Html.LabelFor(model => model.BudgetCapex)
                    @Html.TextBoxFor(model => model.BudgetCapex, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BudgetCapex)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.AffectedKPI)
                    @Html.TextAreaFor(model => model.AffectedKPI, new { @class = "form-control allow-html" })
                    @Html.ValidationMessageFor(model => model.AffectedKPI)
                </div>
                <div class="form-group form-list"   >
                    @Html.LabelFor(model => model.ProjectStartDispay)
                    @Html.TextBoxFor(model => model.ProjectStartDispay, new { @class = "form-control start" })
                    @Html.ValidationMessageFor(model => model.ProjectStartDispay)
                </div>
                 <div class="form-group form-list"  style="position:relative">
                    @Html.LabelFor(model => model.ProjectEndDispay)
                    @Html.TextBoxFor(model => model.ProjectEndDispay, new { @class = "form-control end"})
                    @Html.ValidationMessageFor(model => model.ProjectEndDispay)
                </div>
                <div class="form-group form-list">
                    @Html.LabelFor(model => model.Status)
                    @Html.DropDownListFor(model => model.Status, Model.StatusOptions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
       
                 @Html.Partial("_AttachmentForm", Model.Attachments)

            </div>
        </div>
        <div class="col-md-12 artifact-designer-btns">
            <button type="submit" class="btn btn-primary btn-lg btn-submit"><span class="fa fa-floppy-o"></span>Save</button>
            <a href="@Request.Url.ToString()" class="btn btn-primary btn-lg"><span class="fa fa-repeat"></span>Clear</a>
            <a href="/PopDashboard" class="btn btn-primary btn-lg"><span class="fa fa-times"></span>Cancel</a>
        </div>
    }
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            //$('.start').datetimepicker({
            //    format: "MM/DD/YYYY"
            //});
            //$('.end').datetimepicker({
            //    format: "MM/DD/YYYY"
            //});
            tinyMCE.init({
                selector: ".allow-html",
                menubar: false,
                style_formats: [
                    { title: 'Line height 20px', selector: 'p,div,h1,h2,h3,h4,h5,h6', styles: { lineHeight: '20px' } },
                    { title: 'Line height 30px', selector: 'p,div,h1,h2,h3,h4,h5,h6', styles: { lineHeight: '30px' } }
                ],
                force_br_newlines: true,
                force_p_newlines: false,
                //forced_root_block: '',
                plugins: [
                    "advlist autolink lists link image charmap print preview anchor",
                    "searchreplace visualblocks code fullscreen",
                    "insertdatetime media table contextmenu paste"
                ],
                toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
            });
            $('.btn-submit').click(function (e) {
                e.preventDefault();
                var $this = $(this);
                var $form = $this.closest('form');
                //valiate date
                var startIsValid = moment($form.find('.start').val().trim(), "DD/MM/YYYY", true).isValid();
                var endIsValid = moment($form.find('.end').val().trim(), "DD/MM/YYYY", true).isValid();
                if (!startIsValid) {
                    alert('Project Start should be writtern in following format: DD/MM/YYYY');
                    return;
                }
                if (!endIsValid) {
                    alert('Project End should be writtern in following format: DD/MM/YYYY');
                    return;
                }
                $form.submit();
            });

        });
    </script>
}
